const firebase = require('firebase')

const firebaseConfig = {
    apiKey: import.meta.env.VITE_APP_FIREBASE_API_KEY,
    authDomain: import.meta.env.VITE_APP_FIREBASE_AUTH_DOMAIN + '.firebaseapp.com',
    projectId: import.meta.env.VITE_APP_FIREBASE_PROJECT_ID,
    storageBucket: import.meta.env.VITE_APP_FIREBASE_STORAGE_BUCKET + '.appspot.com',
    messagingSenderId: import.meta.env.VITE_APP_FIREBASE_MESSAGING_SENDER_ID,
    appId: import.meta.env.VITE_APP_FIREBASE_APP_ID,
    measurementId: import.meta.env.VITE_APP_FIREBASE_MEASUREMENT_ID
}

const firebaseApp = firebase.initializeApp(firebaseConfig);
// const timestamp = firebase.firestore.FieldValue.serverTimestamp;

const db = firebaseApp.firestore()

//access to the root collection
const profileCollection = db.collection('userProfile')
const productCollection = db.collection('products');

const getUserProducts = async (document) => {
    const products = await productCollection.get(document);
    return products.data();
};

const getUserProfile = async (userId) => {
    const userProfile = await profileCollection.where('user', '==', userId).get();
    if (!userProfile.exists) {
        console.log("This user does not exist!");
    } else {
        console.log('User Data:', userProfile.data());
        return userProfile.data();
    }
};

const createProfile = (profile) => {
    return profileCollection.add(profile);
};

const createProduct = (product, userId) => {
    return profileCollection
        .doc(userId) // with the ID from the root collection
        .collection('products') // access to the subcollection
        .add(product); // add data into the subcollection with an autogenerated ID
};

module.exports = {
    createProduct,
    createProfile,
    getUserProducts,
    // updateProduct, // use .update({}) to update existing product data
    // deleteProduct,
    // buyProduct,
    // deleteProfile,
    // updateProfile,
    // resetPassword
};

const main = async () => {
    const productCreated = await createProduct({productId: "xxxx"},"useridxxxxx" )
    console.log("ADDING")
    console.log(productCreated.id)
    // const products = await getUserProducts("")
    // console.log(products)

}

main()
// export { createProduct }

// export const getProduct = async id => {
//     const product = await productCollection.doc(id).get()
//     return product.exists ? product.data() : null
// }

// export const updateProduct = async id => {
//     productCollection.doc(id).update()
// }

// export const deleteProduct = async id => {
//     productCollection.doc(id).delete()
// }

// export const useLoadProducts = () => {
//     const products = ref([])
//     const close = productCollection.onSnapshot(snapshot => {
//         products.value = snapshot.docs.map(doc => ({ id: doc.id, ...doc,data() }))
//     })
//     onUnmounted(close)
//     return products
// }
