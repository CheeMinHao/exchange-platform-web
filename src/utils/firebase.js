import firebase from 'firebase/app'

const firebaseConfig = {
    apiKey: import.meta.env.VITE_APP_FIREBASE_API_KEY,
    authDomain: import.meta.env.VITE_APP_FIREBASE_AUTH_DOMAIN + '.firebaseapp.com',
    projectId: import.meta.env.VITE_APP_FIREBASE_PROJECT_ID,
    storageBucket: import.meta.env.VITE_APP_FIREBASE_STORAGE_BUCKET + '.appspot.com',
    messagingSenderId: import.meta.env.VITE_APP_FIREBASE_MESSAGING_SENDER_ID,
    appId: import.meta.env.VITE_APP_FIREBASE_APP_ID,
    measurementId: import.meta.env.VITE_APP_FIREBASE_MEASUREMENT_ID
};

const firebaseApp = firebase.initializeApp(firebaseConfig);

const db = firebaseApp.firestore()
// const profileCollection = db.collection('profile')
const profileCollection = db.collection('userProfile')
// const productCollection = db.collection('addproduct')
// Get a reference to the storage service, which is used to create references in your storage bucket
const storageRef = firebase.storage().ref(); // Points to root reference
const imageRef = storageRef.child('images'); // Point to folder name images
// const spaceRef = imageRef.child(fileName); 

// file path
// const pathName = spaceRef.fullPath; // 'images/fileName'
// const name = spaceRef.name; // 'fileName'

export const getUserProducts = async (document) => {
    const products = await productCollection.doc(userId).collection('products').get(document)
    return products.data()
}

export const createProfile = profile => {
    return profileCollection.add(profile)
}

export const createProduct = (product, userId) => {
    return profileCollection
        .doc(userId) // with the ID from the root collection
        .collection('products') // access to the subcollection
        .add(product); // add data into the subcollection with an autogenerated ID
};

export const currentUser = () => {
    return firebase.auth().currentUser;
}

export const login = (email, password) => {
    return firebase
        .auth()
        .signInWithEmailAndPassword(email, password)
}

export const forgotPassword = (email) => {
    return firebase
            .auth()
            .sendPasswordResetEmail(email)
}
